generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Benevole {
  id                Int                   @id @default(autoincrement())
  nom               String
  prenom            String
  email             String                @unique
  password          String
  pseudo            String                @unique
  statut            String                @default("Benevole")
  tailleTShirt      String?
  vegetarien        Boolean?
  hebergement       String?
  jeuFavoriId       Int?
  picture           Int?
  associationID     Int?
  adresse           String?
  telephone         String?
  jeu               Jeu?                  @relation(fields: [jeuFavoriId], references: [id])
  association       Association?          @relation(fields: [associationID], references: [id])
  inscriptions      InscriptionBenevole[]
  referentPostes    ReferentPoste[]
  festivalBenevoles FestivalBenevole[]
  jeuBenevoles      JeuBenevole[]
  createdAt         DateTime              @default(now())
  updatedAt         DateTime              @updatedAt
}

model Festival {
  id                    Int                     @id @default(autoincrement())
  edition               String
  dateDebut             DateTime
  dateFin               DateTime
  referentPostes        ReferentPoste[]
  benevoles             FestivalBenevole[]
  inscriptionBenevole   InscriptionBenevole[]
  festivalPostes        FestivalPoste[]
  espacesDeJeu          EspaceDeJeu[]
  jeuSousEspaceFestival JeuSousEspaceFestival[]
  createdAt             DateTime                @default(now())
  updatedAt             DateTime                @updatedAt
}

model Association {
  id        Int        @id @default(autoincrement())
  nom       String
  benevoles Benevole[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Poste {
  id                   Int                   @id @default(autoincrement())
  nom                  String                @unique
  description          String                @default("No description")
  nombreBenevoles      Int
  inscriptionBenevoles InscriptionBenevole[]
  referentPostes       ReferentPoste[]
  festivalPostes       FestivalPoste[]
  createdAt            DateTime              @default(now())
  updatedAt            DateTime              @updatedAt
}

model FestivalPoste {
  id         Int      @id @default(autoincrement())
  poste      Poste    @relation(fields: [posteID], references: [id])
  posteID    Int
  festival   Festival @relation(fields: [festivalID], references: [id])
  festivalID Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([posteID, festivalID])
}

model ReferentPoste {
  id         Int      @id @default(autoincrement())
  poste      Poste    @relation(fields: [posteID], references: [id])
  posteID    Int
  benevole   Benevole @relation(fields: [benevoleID], references: [id])
  benevoleID Int
  festival   Festival @relation(fields: [festivalID], references: [id])
  festivalID Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([benevoleID, posteID])
}

model InscriptionBenevole {
  id               Int            @id @default(autoincrement())
  benevole         Benevole       @relation(fields: [benevoleID], references: [id])
  benevoleID       Int
  poste            Poste          @relation(fields: [posteID], references: [id])
  posteID          Int
  creneauHoraire   CreneauHoraire @relation(fields: [creneauHoraireID], references: [id])
  creneauHoraireID Int
  festival         Festival       @relation(fields: [festivalID], references: [id])
  festivalID       Int
  status           String         @default("En attente")
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @updatedAt

  @@unique([benevoleID, posteID, creneauHoraireID, festivalID])
}

model FestivalBenevole {
  id                Int      @id @default(autoincrement())
  festival          Festival @relation(fields: [festivalID], references: [id])
  festivalID        Int
  benevole          Benevole @relation(fields: [benevoleID], references: [id])
  benevoleID        Int
  presenceSamedi    Boolean?
  presenceDimanche  Boolean?
  repasSamediMidi   Boolean?
  repasSamediSoir   Boolean?
  repasDimancheMidi Boolean?
  tShirtPris        Boolean?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  @@unique([benevoleID, festivalID])
}

model EspaceDeJeu {
  id              Int               @id @default(autoincrement())
  nom             String            @unique
  description     String?
  festival        Festival          @relation(fields: [festivalID], references: [id])
  festivalID      Int
  sousEspaceDeJeu SousEspacedeJeu[]
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
}

model SousEspacedeJeu {
  id                    Int                     @id
  nom                   String
  description           String?
  nombreBenevoles       Int
  espaceDeJeu           EspaceDeJeu             @relation(fields: [espaceDeJeuID], references: [id])
  espaceDeJeuID         Int
  jeuSousEspaceFestival JeuSousEspaceFestival[]
  createdAt             DateTime                @default(now())
  updatedAt             DateTime                @updatedAt
}

model CreneauHoraire {
  id                   Int                   @id @default(autoincrement())
  jour                 String
  heureDebut           Int
  heureFin             Int
  inscriptionBenevoles InscriptionBenevole[]
  createdAt            DateTime              @default(now())
  updatedAt            DateTime              @updatedAt
}

model Jeu {
  id                    Int                     @id
  nom                   String                  @unique
  auteur                String?
  editeur               String
  nombreJoueurs         String?
  ageMin                Int?
  duree                 Int?
  type                  String
  notice                String?
  recu                  Boolean
  aAnimer               Boolean
  benevoles             Benevole[]
  jeuBenevoles          JeuBenevole[]
  jeuSousEspaceFestival JeuSousEspaceFestival[]
  createdAt             DateTime                @default(now())
  updatedAt             DateTime                @updatedAt
}

// Relation entre les tables : Jeu, SousEspaceDeJeu et Festival
model JeuSousEspaceFestival {
  jeu               Jeu             @relation(fields: [jeuID], references: [id])
  jeuID             Int
  sousEspaceDeJeu   SousEspacedeJeu @relation(fields: [sousEspaceDeJeuID], references: [id])
  sousEspaceDeJeuID Int
  festival          Festival        @relation(fields: [festivalID], references: [id])
  festivalID        Int
  createdAt         DateTime        @default(now())
  updatedAt         DateTime        @updatedAt

  @@unique([jeuID, sousEspaceDeJeuID, festivalID])
}

model JeuBenevole {
  id         Int      @id @default(autoincrement())
  jeu        Jeu      @relation(fields: [jeuID], references: [id])
  jeuID      Int
  benevole   Benevole @relation(fields: [benevoleID], references: [id])
  benevoleID Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([benevoleID, jeuID])
}
